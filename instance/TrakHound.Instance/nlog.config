<?xml version="1.0" encoding="utf-8" ?>
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Info"
      internalLogFile="c:\temp\internal-nlog-AspNetCore.txt">

	<!-- enable asp.net core layout renderers -->
	<extensions>
		<add assembly="NLog.Web.AspNetCore"/>
	</extensions>

	<!-- the targets to write to -->
	<targets>

		<!--Console-->
		<target name="logconsole" xsi:type="Console" />
		<!--<target name="logconsole" xsi:type="Console"
			layout="[${longdate}] : ${uppercase:${level}} : ${message} ${exception:format=tostring}" />-->

		<!--Error Log File-->
		<target xsi:type="File" name="error-file" fileName="logs\${shortdate}.error.log"
			layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!--Warning Log File-->
		<target xsi:type="File" name="warning-file" fileName="logs\${shortdate}.warning.log"
			layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!--Information Log File-->
		<target xsi:type="File" name="info-file" fileName="logs\${shortdate}.info.log"
			layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

		<!--Debug Log File-->
		<target xsi:type="File" name="debug-file" fileName="logs\${shortdate}.debug.log"
			layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />

	</targets>

	<!-- rules to map from logger name to target -->
	<rules>

		<!--Write to Console-->
		<logger name="TrakHound.*" minlevel="Debug" writeTo="logconsole" />

		<!--Error Logger-->
		<logger name="TrakHound.*" minlevel="Error" writeTo="error-file" final="true" />

		<!--Warning Logger-->
		<logger name="TrakHound.*" minlevel="Warning" writeTo="warning-file" final="true" />

		<!--Info Logger-->
		<!--<logger name="TrakHound.*" minlevel="Info" writeTo="info-file" final="true" />-->

		<!--Debug Logger-->
		<!--<logger name="TrakHound.*" minlevel="Debug" writeTo="debug-file" final="true" />-->

		<!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
		<logger name="Microsoft.*" maxlevel="Warning" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Warning" final="true" />
		
		
		<!--All logs, including from Microsoft--><!--
		<logger name="*" minlevel="Trace" writeTo="allfile" />
		<logger name="*" minlevel="Info" writeTo="logconsole" />

		--><!--Output hosting lifetime messages to console target for faster startup detection --><!--
		<logger name="Microsoft.Hosting.Lifetime" minlevel="Warning" writeTo="lifetimeConsole, ownFile-web" final="true" />

		--><!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) --><!--
		<logger name="Microsoft.*" maxlevel="Warning" final="true" />
		<logger name="System.Net.Http.*" maxlevel="Warning" final="true" />

		<logger name="*" minlevel="Trace" writeTo="ownFile-web" />-->
	</rules>
</nlog>